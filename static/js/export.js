$(document).ready(function () {
    datepickerRange("#rangDate");

    function datepickerRange(inputSelector) {
        const currentDate = new Date();
        const startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
        const endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);  // +1 ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ 0 ‡∏Ñ‡∏∑‡∏≠‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
        const startFormatted = formatDate(startDate);
        const endFormatted = formatDate(endDate);

        $(inputSelector).flatpickr({
            mode: "range",
            dateFormat: "d/m/Y",
            altInput: true,
            altFormat: "d/m/Y",
            allowInput: false,
            defaultDate: [startFormatted, endFormatted],
            locale: {
                weekdays: {
                    shorthand: ["‡∏≠‡∏≤.", "‡∏à.", "‡∏≠.", "‡∏û.", "‡∏û‡∏§.", "‡∏®.", "‡∏™."],
                    longhand: ["‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå", "‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå", "‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£", "‡∏û‡∏∏‡∏ò", "‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ", "‡∏®‡∏∏‡∏Å‡∏£‡πå", "‡πÄ‡∏™‡∏≤‡∏£‡πå"]
                },
                months: {
                    shorthand: ["‡∏°.‡∏Ñ.", "‡∏Å.‡∏û.", "‡∏°‡∏µ.‡∏Ñ.", "‡πÄ‡∏°.‡∏¢.", "‡∏û.‡∏Ñ.", "‡∏°‡∏¥.‡∏¢.", "‡∏Å.‡∏Ñ.", "‡∏™.‡∏Ñ.", "‡∏Å.‡∏¢.", "‡∏ï.‡∏Ñ.", "‡∏û.‡∏¢.", "‡∏ò.‡∏Ñ."],
                    longhand: ["‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°", "‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå", "‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°", "‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô", "‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°", "‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô", "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°", "‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°", "‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô", "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°", "‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô", "‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°"]
                }
            },
            onChange: function (selectedDates, dateStr, instance) {
                if (selectedDates.length === 2) {
                    // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "to" ‡∏î‡πâ‡∏ß‡∏¢ "‡∏ñ‡∏∂‡∏á"
                    let formattedDate = dateStr.replace(" to ", " ‡∏ñ‡∏∂‡∏á ");
                    $(inputSelector).val(formattedDate);
                    $(instance.altInput).val(formattedDate);
                }
                const startDate = formatDate(selectedDates[0]);
                const endDate = formatDate(selectedDates[1]);

                $('#startDateInput').val(startDate);
                $('#endDateInput').val(endDate);
            },
            onReady: function (selectedDates, dateStr, instance) {
                if (dateStr.indexOf(" to ") !== -1) {
                    let formattedDate = dateStr.replace(" to ", " ‡∏ñ‡∏∂‡∏á ");
                    $(inputSelector).val(formattedDate);
                    $(instance.altInput).val(formattedDate);
                }
                const currentDate = new Date();
                const startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
                const endDate = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);

                const startFormatted = formatDate(startDate);
                const endFormatted = formatDate(endDate);

                $('#startDateInput').val(startFormatted);
                $('#endDateInput').val(endFormatted);
            }
        });
    }
});

function exports(type) {
    var startDate = $('#startDateInput').val();
    var endDate = $('#endDateInput').val();
    var status = $('#status').val();

    var formData = new FormData();
    formData.append('start_date', startDate);
    formData.append('end_date', endDate);
    formData.append('status_approve', status);

    if (type === 'requestLoan') {
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '/exports/', true);
        xhr.setRequestHeader("X-CSRFToken", getCookie("csrftoken"));
        xhr.responseType = 'blob'; // üü¢ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î response ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå binary

        xhr.onload = function () {
            if (xhr.status === 200) {
                var blob = new Blob([xhr.response], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠.xlsx';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            } else {
                console.error('Export error:', xhr.statusText);
            }
        };
        
        xhr.send(formData);
    }
}

